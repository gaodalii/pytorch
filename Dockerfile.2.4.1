# docker build --progress plain --network=host -f Dockerfile.2.4.1 -t registry.light-field.tech/citygen/pytorch:2.4.1 .
# --build-arg http_proxy=http://127.0.0.1:11000 --build-arg https_proxy=http://127.0.0.1:11000 

FROM nvcr.io/nvidia/cuda:12.4.1-devel-ubuntu22.04

ENV NVIDIA_DRIVER_CAPABILITIES=all

ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ 

RUN mv /etc/apt/sources.list /etc/apt/sources.list.bak && \
    echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse" > /etc/apt/sources.list && \
    echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse" >> /etc/apt/sources.list && \
    echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse" >> /etc/apt/sources.list && \
    echo "deb http://security.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse" >> /etc/apt/sources.list

# Python 3.10
RUN apt-get update && \
    apt-get install -y software-properties-common && \
    apt-get update && \
    add-apt-repository -y ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get purge -y --auto-remove python3 && \
    apt-get install -y python3.10 python3.10-dev python3.10-distutils wget && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1

# pip
RUN wget https://bootstrap.pypa.io/get-pip.py && \
    python get-pip.py && \
    pip install --upgrade pip
    
# ssh and jupyterlab
RUN apt-get update && \
    apt-get install -y  openssh-server && \
    mkdir /var/run/sshd && \
    echo 'root:root' | chpasswd && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
    pip install --no-cache-dir  -i https://pypi.tuna.tsinghua.edu.cn/simple jupyterlab   

RUN apt-get update && apt-get install -y build-essential ninja-build git htop 

RUN pip install torch==2.4.1 torchvision==0.19.1 torchaudio==2.4.1 --index-url https://download.pytorch.org/whl/cu124

# 
WORKDIR /scripts

COPY entrypoint.sh .

RUN chmod +x entrypoint.sh

RUN apt-get update && apt-get -y install tini 

ENTRYPOINT ["tini", "-s", "--"]







